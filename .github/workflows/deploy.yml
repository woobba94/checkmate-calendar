name: Auto Deploy to Vercel

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy-landing:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip landing]') == false
    steps:
      - uses: actions/checkout@v3

      - name: Check for landing changes
        id: landing_changes
        shell: bash
        run: |
          git fetch origin ${{ github.ref_name }} --depth=2
          if git diff --name-only HEAD~1 HEAD | grep "^apps/landing/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build & Deploy landing
        if: steps.landing_changes.outputs.changed == 'true'
        shell: bash
        working-directory: apps/landing
        run: |
          npm ci
          mkdir -p .vercel
          printf '{"orgId":"%s","projectId":"%s"}' \
            "${{ secrets.VERCEL_ORG_ID }}" "${{ secrets.VERCEL_PROJECT_ID_LANDING }}" > .vercel/project.json
          [ -s .vercel/project.json ] || { echo "project.json missing"; exit 1; }
          npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi

  deploy-calendar:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip calendar]') == false
    steps:
      - uses: actions/checkout@v3

      - name: Check for calendar changes
        id: calendar_changes
        shell: bash
        run: |
          git fetch origin ${{ github.ref_name }} --depth=2
          if git diff --name-only HEAD~1 HEAD | grep "^apps/calendar/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build & Deploy calendar
        if: steps.calendar_changes.outputs.changed == 'true'
        shell: bash
        working-directory: apps/calendar
        run: |
          npm ci
          mkdir -p .vercel
          printf '{"orgId":"%s","projectId":"%s"}' \
            "${{ secrets.VERCEL_ORG_ID }}" "${{ secrets.VERCEL_PROJECT_ID_CALENDAR }}" > .vercel/project.json
          [ -s .vercel/project.json ] || { echo "project.json missing"; exit 1; }
          npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
