name: Auto Deploy to Vercel

on:
  push:
    branches: [main, dev]

jobs:
  deploy-landing:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip landing]') == false
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'projects/landing/package-lock.json'

      - name: Check for landing changes
        id: landing_changes
        shell: bash
        run: |
          git fetch origin ${{ github.ref_name }} --depth=2
          if git diff --name-only HEAD~1 HEAD | grep "^projects/landing/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies (landing)
        if: steps.landing_changes.outputs.changed == 'true'
        working-directory: projects/landing
        run: npm install

      - name: vercel pull (landing)
        if: steps.landing_changes.outputs.changed == 'true'
        shell: bash
        working-directory: projects/landing
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_LANDING }}
        run: |
          npx vercel pull --yes \
            --environment=$([ '${{ github.ref_name }}' = 'main' ] && echo production || echo preview) \
            --token=${{ secrets.VERCEL_TOKEN }}

      - name: vercel build (landing)
        if: steps.landing_changes.outputs.changed == 'true'
        shell: bash
        working-directory: projects/landing
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: vercel deploy (landing)
        if: steps.landing_changes.outputs.changed == 'true'
        shell: bash
        working-directory: projects/landing
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi

  deploy-calendar:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip calendar]') == false
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'projects/calendar/package.json'

      - name: Check for calendar changes
        id: calendar_changes
        shell: bash
        run: |
          git fetch origin ${{ github.ref_name }} --depth=2
          if git diff --name-only HEAD~1 HEAD | grep "^projects/calendar/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies (calendar)
        if: steps.calendar_changes.outputs.changed == 'true'
        working-directory: projects/calendar
        run: npm install

      - name: vercel pull (calendar)
        if: steps.calendar_changes.outputs.changed == 'true'
        shell: bash
        working-directory: projects/calendar
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_CALENDAR }}
        run: |
          npx vercel pull --yes \
            --environment=$([ '${{ github.ref_name }}' = 'main' ] && echo production || echo preview) \
            --token=${{ secrets.VERCEL_TOKEN }}

      - name: vercel build (calendar)
        if: steps.calendar_changes.outputs.changed == 'true'
        shell: bash
        working-directory: projects/calendar
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: vercel deploy (calendar)
        if: steps.calendar_changes.outputs.changed == 'true'
        shell: bash
        working-directory: projects/calendar
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
