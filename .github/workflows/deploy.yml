name: Auto Deploy to Vercel

on:
  push:
    branches: [main, dev]

jobs:
  deploy-landing:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip landing]') == false
    steps:
      - uses: actions/checkout@v3

      - name: Check for landing changes
        id: landing_changes
        shell: bash
        run: |
          git fetch origin ${{ github.ref_name }} --depth=2
          if git diff --name-only HEAD~1 HEAD | grep "^projects/landing/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug - Environment Info
        if: steps.landing_changes.outputs.changed == 'true'
        run: |
          echo "=== Debug Information ==="
          echo "Current directory: $(pwd)"
          echo "Shell: $SHELL"
          echo "PATH: $PATH"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo ""
          echo "=== Directory structure ==="
          ls -la
          echo ""
          echo "=== projects/landing structure ==="
          ls -la projects/landing/
          echo ""
          echo "=== vercel.json content ==="
          cat projects/landing/vercel.json || echo "vercel.json not found"
          echo ""
          echo "=== Check for .vercel directory ==="
          ls -la projects/landing/.vercel/ 2>/dev/null || echo "No .vercel directory yet"

      - name: vercel pull (landing)
        if: steps.landing_changes.outputs.changed == 'true'
        shell: bash
        working-directory: .
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_LANDING }}
        run: |
          echo "=== Running vercel pull ==="
          echo "Working directory: $(pwd)"
          echo "VERCEL_ORG_ID is set: ${{ secrets.VERCEL_ORG_ID != '' }}"
          echo "VERCEL_PROJECT_ID is set: ${{ secrets.VERCEL_PROJECT_ID_LANDING != '' }}"

          npx vercel@48.0.3 pull --yes \
            --environment=$([ '${{ github.ref_name }}' = 'main' ] && echo production || echo preview) \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --cwd projects/landing \
            --debug 2>&1 || {
              echo "=== Vercel pull failed with exit code $? ==="
              echo "=== Checking if .vercel was created ==="
              ls -la projects/landing/.vercel/ 2>/dev/null || echo "No .vercel directory"
              exit 1
            }

          echo "=== After vercel pull ==="
          ls -la projects/landing/.vercel/

      - name: vercel build (landing)
        if: steps.landing_changes.outputs.changed == 'true'
        shell: bash
        working-directory: .
        run: |
          echo "=== Running vercel build ==="
          echo "Working directory: $(pwd)"
          echo "Target directory contents:"
          ls -la projects/landing/

          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "Building for production"
            npx vercel@48.0.3 build --prod --token=${{ secrets.VERCEL_TOKEN }} --cwd projects/landing --debug 2>&1
          else
            echo "Building for preview"
            npx vercel@48.0.3 build --token=${{ secrets.VERCEL_TOKEN }} --cwd projects/landing --debug 2>&1
          fi

      - name: vercel deploy (landing)
        if: steps.landing_changes.outputs.changed == 'true'
        shell: bash
        working-directory: .
        run: |
          echo "=== Running vercel deploy ==="
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod --cwd projects/landing
          else
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --cwd projects/landing
          fi

  deploy-calendar:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip calendar]') == false
    steps:
      - uses: actions/checkout@v3

      - name: Check for calendar changes
        id: calendar_changes
        shell: bash
        run: |
          git fetch origin ${{ github.ref_name }} --depth=2
          if git diff --name-only HEAD~1 HEAD | grep "^projects/calendar/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug - Environment Info
        if: steps.calendar_changes.outputs.changed == 'true'
        run: |
          echo "=== Debug Information ==="
          echo "Current directory: $(pwd)"
          echo "Shell: $SHELL"
          echo "PATH: $PATH"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo ""
          echo "=== Directory structure ==="
          ls -la
          echo ""
          echo "=== projects/calendar structure ==="
          ls -la projects/calendar/
          echo ""
          echo "=== vercel.json content ==="
          cat projects/calendar/vercel.json || echo "vercel.json not found"

      - name: vercel pull (calendar)
        if: steps.calendar_changes.outputs.changed == 'true'
        shell: bash
        working-directory: .
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_CALENDAR }}
        run: |
          echo "=== Running vercel pull ==="
          echo "Working directory: $(pwd)"

          npx vercel@48.0.3 pull --yes \
            --environment=$([ '${{ github.ref_name }}' = 'main' ] && echo production || echo preview) \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --cwd projects/calendar \
            --debug 2>&1 || {
              echo "=== Vercel pull failed with exit code $? ==="
              exit 1
            }

      - name: vercel build (calendar)
        if: steps.calendar_changes.outputs.changed == 'true'
        shell: bash
        working-directory: .
        run: |
          echo "=== Running vercel build ==="
          echo "Working directory: $(pwd)"

          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel@48.0.3 build --prod --token=${{ secrets.VERCEL_TOKEN }} --cwd projects/calendar --debug 2>&1
          else
            npx vercel@48.0.3 build --token=${{ secrets.VERCEL_TOKEN }} --cwd projects/calendar --debug 2>&1
          fi

      - name: vercel deploy (calendar)
        if: steps.calendar_changes.outputs.changed == 'true'
        shell: bash
        working-directory: .
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod --cwd projects/calendar
          else
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --cwd projects/calendar
          fi
