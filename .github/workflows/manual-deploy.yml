name: Manual Deploy to Vercel

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'target (landing / calendar)'
        required: true
        type: choice
        options: [landing, calendar]
      deploy_env:
        description: 'deploy environment'
        default: 'production'
        required: true
        type: choice
        options: [production, preview]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      # landing
      - name: vercel pull (landing)
        if: ${{ github.event.inputs.app == 'landing' }}
        shell: bash
        working-directory: projects/landing
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_LANDING }}
        run: |
          npx vercel@48.0.3 pull --yes --environment=${{ github.event.inputs.deploy_env }} \
            --token=${{ secrets.VERCEL_TOKEN }}

      - name: vercel build (landing)
        if: ${{ github.event.inputs.app == 'landing' }}
        shell: bash
        working-directory: projects/landing
        run: |
          if [ "${{ github.event.inputs.deploy_env }}" = "production" ]; then
            npx vercel@48.0.3 build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            npx vercel@48.0.3 build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: vercel deploy (landing)
        if: ${{ github.event.inputs.app == 'landing' }}
        shell: bash
        working-directory: projects/landing
        run: |
          if [ "${{ github.event.inputs.deploy_env }}" = "production" ]; then
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi

      # calendar
      - name: vercel pull (calendar)
        if: ${{ github.event.inputs.app == 'calendar' }}
        shell: bash
        working-directory: projects/calendar
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_CALENDAR }}
        run: |
          npx vercel@48.0.3 pull --yes --environment=${{ github.event.inputs.deploy_env }} \
            --token=${{ secrets.VERCEL_TOKEN }}

      - name: vercel build (calendar)
        if: ${{ github.event.inputs.app == 'calendar' }}
        shell: bash
        working-directory: projects/calendar
        run: |
          if [ "${{ github.event.inputs.deploy_env }}" = "production" ]; then
            npx vercel@48.0.3 build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            npx vercel@48.0.3 build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: vercel deploy (calendar)
        if: ${{ github.event.inputs.app == 'calendar' }}
        shell: bash
        working-directory: projects/calendar
        run: |
          if [ "${{ github.event.inputs.deploy_env }}" = "production" ]; then
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            npx vercel@48.0.3 deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
