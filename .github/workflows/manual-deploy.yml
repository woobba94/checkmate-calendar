name: Manual Deploy to Vercel

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'target (landing / calendar)'
        required: true
        type: choice
        options: [landing, calendar]
      branch:
        description: 'branch (main/dev)'
        default: 'main'
        required: true
        type: choice
        options: [main, dev]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      # -------- landing --------
      - name: vercel pull (landing)
        if: ${{ github.event.inputs.app == 'landing' }}
        shell: bash
        working-directory: .
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_LANDING }}
        run: |
          echo "[landing] pull -> $([ '${{ github.event.inputs.branch }}' = 'main' ] && echo production || echo preview)"
          npx vercel pull --yes \
            --environment=$([ '${{ github.event.inputs.branch }}' = 'main' ] && echo production || echo preview) \
            --token=${{ secrets.VERCEL_TOKEN }}

      - name: vercel build (landing)
        if: ${{ github.event.inputs.app == 'landing' }}
        shell: bash
        working-directory: .
        run: |
          if [ "${{ github.event.inputs.branch }}" = "main" ]; then
            echo "[landing] build --prod"
            npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            echo "[landing] build (preview)"
            npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: vercel deploy (landing)
        if: ${{ github.event.inputs.app == 'landing' }}
        shell: bash
        working-directory: .
        run: |
          if [ "${{ github.event.inputs.branch }}" = "main" ]; then
            echo "[landing] deploy --prod"
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            echo "[landing] deploy (preview)"
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi

      # -------- calendar --------
      - name: vercel pull (calendar)
        if: ${{ github.event.inputs.app == 'calendar' }}
        shell: bash
        working-directory: .
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_CALENDAR }}
        run: |
          echo "[calendar] pull -> $([ '${{ github.event.inputs.branch }}' = 'main' ] && echo production || echo preview)"
          npx vercel pull --yes \
            --environment=$([ '${{ github.event.inputs.branch }}' = 'main' ] && echo production || echo preview) \
            --token=${{ secrets.VERCEL_TOKEN }}

      - name: vercel build (calendar)
        if: ${{ github.event.inputs.app == 'calendar' }}
        shell: bash
        working-directory: .
        run: |
          if [ "${{ github.event.inputs.branch }}" = "main" ]; then
            echo "[calendar] build --prod"
            npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            echo "[calendar] build (preview)"
            npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: vercel deploy (calendar)
        if: ${{ github.event.inputs.app == 'calendar' }}
        shell: bash
        working-directory: .
        run: |
          if [ "${{ github.event.inputs.branch }}" = "main" ]; then
            echo "[calendar] deploy --prod"
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
          else
            echo "[calendar] deploy (preview)"
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
